[main]
# First, create a data source to point into our authentication database
psql                     = org.postgresql.ds.PGPoolingDataSource

psql.initialConnections = 1
psql.maxConnections     = 6
psql.serverName         = localhost
# 0 is the default port
psql.portNumber         = 5432
psql.databaseName       = permissions
psql.user                = radek
psql.password            = haslo

# Next, configure Shiro to use that to extract credentials
realm             = org.apache.shiro.realm.jdbc.JdbcRealm
realm.dataSource = $psql
realm.permissionsLookupEnabled = true

realm.authenticationQuery = select user_password from users where user_name = ?
realm.permissionsQuery    =  SELECT PERM.permission_name FROM (SELECT RP.permission_id perm_id FROM roles ROLES JOIN roles_permissions RP ON ROLES.role_id = RP.role_id WHERE ROLES.role_name = ?) AS ROLENAME_TO_PERM JOIN permissions PERM ON perm_id = PERM.permission_id 
realm.userRolesQuery      = SELECT ROLES.role_name FROM (SELECT USERS.user_name, USERS_ROLES.role_id _role_id FROM users USERS JOIN users_roles USERS_ROLES ON USERS.user_id = USERS_ROLES.user_id WHERE USERS.user_name = ?) AS USERS_TO_ROLES JOIN roles ROLES ON ROLES.role_id = _role_id

securityManager.realms = $realm

# It is also possible to configure custom queries; the default schema can be
# found in the Shiro documentation and source code, but you can supply
# arbitrary SQL queries.  These reflect the default values for this example:
